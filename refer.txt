Let’s Generate and Use an SSH Key for GitHub
Follow these commands exactly on your server:

🔐 Step 1: Generate SSH Key

ssh-keygen -t rsa -b 4096 -C "your-email@example.com"

When prompted:

Press Enter to save to default path: /root/.ssh/id_rsa
Press Enter twice again (for no passphrase)
------------------------------------------------
📋 Step 2: Show and Copy the Public Key

cat ~/.ssh/id_rsa.pub
You'll see something like:

------------------------------------
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQ... your-email@example.com
📌 Copy the entire line.

🔗 Step 3: Add the SSH Key to GitHub
Go to https://github.com/settings/keys

Click "New SSH Key"

Title: VM Key or Docker Server

Paste the copied key

Click Add SSH Key

🔁 Step 4: Set Your Git Remote to Use SSH
Inside your project directory:

bash
Copy
Edit
cd ~/IPL-Auction
git remote set-url origin git@github.com:shannu5555/IPL-Auction.git
Then confirm:

bash
Copy
Edit
git remote -v
It should now show:

scss
Copy
Edit
origin  git@github.com:shannu5555/IPL-Auction.git (fetch)
origin  git@github.com:shannu5555/IPL-Auction.git (push)
🚀 Step 5: Test the SSH Connection
bash
Copy
Edit
ssh -T git@github.com
On success:

vbnet
Copy
Edit
Hi shannu5555! You've successfully authenticated, but GitHub does not provide shell access.
✅ Step 6: Push to GitHub (No token required!)
bash
Copy
Edit
git push origin main
🎉 You're now using SSH authentication securely with GitHub from your VM!

Let me know if you'd also like:

A .ssh/config file for managing multiple keys

SSH setup for GitLab too (if needed)

.gitignore suggestions for Docker/Django projects

=========================================================================================================
#TO MIGRATE APP AFTER RUNNING 

docker exec -it 8daec792ce90 bash
python manage.py migrate

=========================================================================================================

ALLOWED_HOSTS

settings.py
allowed host = ['yourhiost']
=========================================================================================================
Great! From your logs:

* ✅ You successfully rebuilt the Docker image (`ipl-auction`) with **Pillow installed**.
* ❌ But your **new container (`cranky_edison`) exited** right after starting.

---

## ✅ What You Should Do Next

### 🔹 Step 1: Run a New Container Using the Updated Image on Port 8002

Run it **detached** with the correct port:

```
docker run -d -p 8002:8000 --name ipl-auction-container ipl-auction
```

Check it's running:

```
docker ps
```

---

### 🔹 Step 2: Apply Migrations (Inside Running Container)

Get the container ID or name from `docker ps` (e.g., `ipl-auction-container`) and run:

```bash
docker exec -it ipl-auction-container python manage.py migrate
```

✅ Now your database tables (like `django_session`) will be created.

---

### 🔹 Step 3 (Optional): Create a Superuser

```
docker exec -it ipl-auction-container python manage.py createsuperuser
```

---

### 🔹 Step 4: Visit in Browser

Open your app at:
👉 `http://<your-server-ip>:8002`

---


